name: Release all

# trigger on published release
on:
  release:
    types: [published]

jobs:
  load_supported_versions:
    runs-on: ubuntu-20.04

    outputs:
      matrix: ${{ steps.set-versions.outputs.matrix }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Save released versions as output
        id: set-versions
        run: |
          VERSIONS=$(make releases | jq -Rrcn '[inputs]')
          echo "::set-output name=matrix::${VERSIONS}"

  build_push_release:
    runs-on: ubuntu-20.04
    needs:
      - load_supported_versions

    strategy:
      fail-fast: true
      matrix:
        version: ${{ fromJSON(needs.load_supported_versions.outputs.matrix) }}

    env:
      IMAGE_NAME: "stroem/terraform-azure-cli"

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          TERRAFORM_VERSION=$(echo "${{ matrix.version }}" | jq -Rr 'split("_")[0] | split("-")[1]')
          AZURE_CLI_VERSION=$(echo "${{ matrix.version }}" | jq -Rr 'split("_")[1] | split("-")[1]')
          echo "IMAGE_TAG=terraform-${TERRAFORM_VERSION}_azurecli-${AZURE_CLI_VERSION}" >> $GITHUB_ENV
          echo "TERRAFORM_VERSION=${TERRAFORM_VERSION}" >> $GITHUB_ENV
          echo "AZURE_CLI_VERSION=${AZURE_CLI_VERSION}" >> $GITHUB_ENV

      - name: Build image
        run: make build

      - name: Login to Docker Hub registry
        run: echo '${{ secrets.DOCKERHUB_PASS }}' | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push image to registry
        run: make publish

      - name: Save image
        run: make artifact-save

      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.IMAGE_TAG }}
          path: build/image_${{ env.IMAGE_TAG }}.tar
