name: build-test

# trigger on any push
# but not on master or tags
# and only for Dockerfile related modifications
on:
  push:
    tags-ignore:
      - "**"
    branches:
      - "**"
      - "!master"
    paths:
      - "Dockerfile"
      - "hashicorp.asc"
      - "tests/*"
      - ".dockerignore"
      - ".github/workflows/build-test.yml"

env:
  IMAGE_NAME: "terraform-azure-cli"
  NO_VERSIONS: 5

jobs:
  load_supported_versions:
    runs-on: ubuntu-20.04

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Save supported versions as output
        id: set-matrix
        run: |
          echo "::set-output name=tf_versions::['a','b','c']"
          echo "::set-output name=azcli_versions::['a','b','c']"

          TF_VERSIONS=$(make terraform-releases | jq -Rc '[inputs]')
          TF_VERSIONS="${TF_VERSIONS//'%'/%25}"
          TF_VERSIONS="${TF_VERSIONS//$'\n'/%0A}"
          TF_VERSIONS="${TF_VERSIONS//$'\r'/%0D}"
          echo "set-output name=tf_versions::${TF_VERSIONS}"
          echo "${TF_VERSIONS}"
          AZ_VERSIONS=$(make azure-cli-releases | jq -Rc '[inputs]')
          AZ_VERSIONS="${AZ_VERSIONS//'%'/%25}"
          AZ_VERSIONS="${AZ_VERSIONS//$'\n'/%0A}"
          AZ_VERSIONS="${AZ_VERSIONS//$'\r'/%0D}"
          echo "set-output name=azcli_versions::${AZ_VERSIONS}"
          echo "${AZ_VERSIONS}"

  build:
    runs-on: ubuntu-20.04
    needs: load_supported_versions
    strategy:
      matrix:
        tf_version: ${{ fromJSON(needs.load_supported_versions.outputs.tf_versions) }}
        azcli_version: ${{ fromJSON(needs.load_supported_versions.outputs.azcli_versions) }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${BRANCH}_terraform-${{ matrix.tf_version }}_azcli-${{ matrix.azcli_version }}" >> $GITHUB_ENV
          echo "TERRAFORM_VERSION=${{ matrix.tf_version }}" >> $GITHUB_ENV
          echo "AZURE_CLI_VERSION=${{ matrix.azcli_version }}" >> $GITHUB_ENV

      - name: Build image
        run: make build

      - name: Save image
        run: make artifact-save

      - name: Upload image artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.IMAGE_TAG }}
          path: build/image_${{ env.IMAGE_TAG }}.tar

  test:
    runs-on: ubuntu-20.04
    needs:
      - build
      - load_supported_versions
    strategy:
      matrix: ${{ fromJSON(needs.load_supported_versions.outputs.matrix) }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${BRANCH}_terraform-${{ matrix.tf_version }}_azcli-${{ matrix.azcli_version }}" >> $GITHUB_ENV
          echo "TERRAFORM_VERSION=${{ matrix.tf_version }}" >> $GITHUB_ENV
          echo "AZURE_CLI_VERSION=${{ matrix.azcli_version }}" >> $GITHUB_ENV

      - name: Download image artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.IMAGE_TAG }}

      - name: Load image
        run: make artifact-load

      - name: Run structure tests
        run: make test
