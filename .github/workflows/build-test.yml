name: Testing

# trigger on any push
# but not on master or tags
# and only for Dockerfile related modifications
on:
  push:
    tags-ignore:
      - "**"
    branches:
      - "**"
      - "!master"
    paths:
      - "Dockerfile"
      - "hashicorp.asc"
      - "tests/*"
      - ".dockerignore"
      - ".github/workflows/build-test.yml"

env:
  IMAGE_NAME: "terraform-azure-cli"
  NO_VERSIONS: 2

jobs:
  load_supported_versions:
    runs-on: ubuntu-20.04

    outputs:
      matrix: ${{ steps.set-versions.outputs.matrix }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Save released versions as output
        id: set-versions
        run: |
          VERSIONS=$(make releases | jq -Rrcn '[inputs]')
          echo "::set-output name=matrix::${VERSIONS}"

  build:
    runs-on: ubuntu-20.04
    needs: load_supported_versions
    strategy:
      fail-fast: true
      matrix:
        version: ${{ fromJSON(needs.load_supported_versions.outputs.matrix) }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          TERRAFORM_VERSION=$(echo "${{ matrix.version }}" | jq -Rr 'split("_")[0] | split("-")[1]')
          AZURE_CLI_VERSION=$(echo "${{ matrix.version }}" | jq -Rr 'split("_")[1] | split("-")[1]')
          echo "IMAGE_TAG=terraform-${TERRAFORM_VERSION}_azurecli-${AZURE_CLI_VERSION}" >> $GITHUB_ENV
          echo "TERRAFORM_VERSION=${TERRAFORM_VERSION}" >> $GITHUB_ENV
          echo "AZURE_CLI_VERSION=${AZURE_CLI_VERSION}" >> $GITHUB_ENV

      - name: Build image
        run: make build

      - name: Save image
        run: make artifact-save

      - name: Upload image artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.IMAGE_TAG }}
          path: build/image_${{ env.IMAGE_TAG }}.tar

  test:
    runs-on: ubuntu-20.04
    needs:
      - build
      - load_supported_versions
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJSON(needs.load_supported_versions.outputs.matrix) }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          TERRAFORM_VERSION=$(echo "${{ matrix.version }}" | jq -Rr 'split("_")[0] | split("-")[1]')
          AZURE_CLI_VERSION=$(echo "${{ matrix.version }}" | jq -Rr 'split("_")[1] | split("-")[1]')
          echo "IMAGE_TAG=terraform-${TERRAFORM_VERSION}_azurecli-${AZURE_CLI_VERSION}" >> $GITHUB_ENV
          echo "TERRAFORM_VERSION=${TERRAFORM_VERSION}" >> $GITHUB_ENV
          echo "AZURE_CLI_VERSION=${AZURE_CLI_VERSION}" >> $GITHUB_ENV

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.IMAGE_TAG }}

      - name: Load image
        run: ARTIFACT_FOLDER=. make artifact-load

      - name: Run structure tests
        run: make test
